/* eslint quotes: [2, "double", "avoid-escape"] */

// AUTOGENERATED.
// {% var d=new Date(); print(d.toString()); %}

"use strict";

var path = require("path");

var PROJECT_DIR = process.env.WEBPACK_OUTPUT_PATH || process.cwd();

module.exports = {
  "devtool": "{%= o.webpack.devtool %}",

  "entry": {% if (o.test) { %}{},{% } else { %}{%# JSON.stringify(o.webpack.entry, null, "    ").replace(/}$/g, "  }").replace(/(\s{9})/g, "\n      ") %},{% } %}

  "output": {% if (o.test) { %}{}{% } else { %}{
    "path": path.join(PROJECT_DIR, {%# o.webpack.output.path %}),
    "publicPath": {%= o.webpack.output.publicPath %},
    "filename": {%= o.webpack.output.filename %},
    "chunkFilename": {%= o.webpack.output.chunkFilename %},
    "sourceMapFilename": {%= o.webpack.output.sourceMapFilename %},
    "pathInfo": {%= o.webpack.output.pathInfo %}
  }{% } %},

  "debug": {%= o.webpack.debug %},

  "resolve": {
    "root": path.join(PROJECT_DIR, "src"),
    "extensions": [", ".js", ".jsx"],
    "alias": {
      "app": path.join(PROJECT_DIR, "src")
    }
  },

  "resolveLoader": {
    "root": path.join(PROJECT_DIR, "node_modules")
  },

  "module": {
    "preLoaders": [
      {
        "test": /\.(js|jsx)$/,
        "exclude": /node_modules/,
        "loader": "eslint-loader"
      }
    ],

    "loaders": [
      {
        "test": /\.(js|jsx)$/,
        "exclude": /node_modules/,
        "loader": "{%= o.webpack.module.loaders.javascript %}"
      },
      {
        "test": /\.css$/,
        "loader": "{%= o.webpack.module.loaders.css %}"
      },
      {
        "test": /\.less$/,
        "loader": "{%= o.webpack.module.loaders.less %}"
      },
      {
        "test": /\.scss$/,
        "loader": "{%= o.webpack.module.loaders.scss %}"
      },
      {
        "test": /\.woff(\?v=\d+\.\d+\.\d+)?$/,
        "loader": "url?limit=10000&mimetype=application/font-woff&name=[name]-[hash].[ext]"
      },
      {
        "test": /\.woff2(\?v=\d+\.\d+\.\d+)?$/,
        "loader": "url?limit=10000&mimetype=application/font-woff&name=[name]-[hash].[ext]"
      },
      {
        "test": /\.ttf(\?v=\d+\.\d+\.\d+)?$/,
        "loader": "url?limit=10000&mimetype=application/octet-stream&name=[name]-[hash].[ext]"
      },
      {
        "test": /\.eot(\?v=\d+\.\d+\.\d+)?$/,
        loader: "file?name=[name]-[hash].[ext]"
      },
      {
        "test": /\.svg(\?v=\d+\.\d+\.\d+)?$/,
        "loader": "url?limit=10000&mimetype=image/svg+xml&name=[name]-[hash].[ext]"
      },
      {
        "test": /\.(png|jpg|jpeg|gif)$/,
        "loader": "url?limit=10000&name=[name]-[hash].[ext]"
      },
      {
        "test": /\.json$/,
        "loader": "json"
      },
      {
        "test": /\.(wav|mp3|mp4)$/,
        "loader": "file?name=[name]-[hash].[ext]"
      },
      {
        "test": /\.html$/,
        "loader": "html"
      },
      {
        "test": /\.txt$/,
        "loader": "raw"
      }
    ],

    "plugins": [
      {%# o.webpack.plugins.join(",\n") %}
    ],

    "eslint": {% if (o.webpack.eslint) { %}{%# JSON.stringify(o.webpack.eslint, null, "      ").replace(/}$/g, "    }") %}{% } else { %}{}{% } %}
  }
};
